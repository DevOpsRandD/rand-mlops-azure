name: MLOps CD
on:
  workflow_run:
    workflows: ["MLOps training"]
    types: [requested, completed]
    branches:
      - "main"
  workflow_dispatch:

env:
  ACI_DEPLOYMENT_NAME: mlops-test-randd

jobs: 
  Model_CD_Pipeline:
    runs-on: [self-hosted, local-linux]
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    container: mcr.microsoft.com/mlops/python:latest
    steps:

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Test vars
      run: |
        echo "Name or Id of the workflow"
        echo ${{ github.event.workflow_run.workflow_id }}
        echo "********"
        echo ${{ github.event.workflow_run.conclusion }}
        echo "********"
        
    - name: Download artifact from workflow_run event
      uses: dawidd6/action-download-artifact@v2
      if: ${{ github.event.workflow_run.conclusion == 'success' }}
      with:
        workflow: ${{ github.event.workflow_run.workflow_id }}
        run_id: ${{ github.event.workflow_run.workflow_id }}
        name: MLdrop
        path: MLdrop

    - name: Download artifact manual
      uses: dawidd6/action-download-artifact@v2
      if: ${{ github.event.workflow_run.conclusion == '' }}
      with:
        workflow: mlops-CI.yml
        name: MLdrop
        path: MLdrop

    - name: Parse Json for Model Name and Version
      run: |
        # Print JSON
        cat MLdrop/model.json | jq '.'
        # Set model name and version variables
        MODEL_NAME=$(jq -r '.name' MLdrop/model.json)
        MODEL_VERSION=$(jq -r '.version' MLdrop/model.json)

        echo "Model Name: $MODEL_NAME"
        echo "Model Version: $MODEL_VERSION"

        # Set environment variables

        echo "MODEL_NAME=$MODEL_NAME" >> $GITHUB_ENV
        echo "MODEL_VERSION=$MODEL_VERSION" >> $GITHUB_ENV

    - name: 'Install AzureML CLI'
      run: |
        version=$(az extension list | grep '"name": "azure-cli-ml"')
        if [ -z "$version" ]
        then
          echo "Installing az ML CLI"
          az extension add --source https://azurecliext.blob.core.windows.net/release/azure_cli_ml-1.27.0-py3-none-any.whl --yes
        fi

    - name: Deploy to ACI
      working-directory: 'diabetes_regression/scoring'
      run: |
        set -e # fail on error
          
        az ml model deploy --name $ACI_DEPLOYMENT_NAME --model '$MODEL_NAME:$MODEL_VERSION' \
        --ic inference_config.yml \
        --dc deployment_config_aci.yml \
        -g $(RESOURCE_GROUP) --workspace-name $(WORKSPACE_NAME) \
        --overwrite -v

    - name: Smoke test
      run: |
        set -e # fail on error
        export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
        python -m ml_service.util.smoke_test_scoring_service --type ACI --service "$ACI_DEPLOYMENT_NAME"